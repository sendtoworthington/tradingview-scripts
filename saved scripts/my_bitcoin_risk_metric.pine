// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Thlem

//@version=4
study("My:Bitcoin Risk Metric")
///////////////////////////////////////////////////////////
// SMA Risk Metric
///////////////////////////////////////////////////////////

getColor(ratio, ar) =>
    if (ratio > array.get(ar, 0))
        #9F191E // Dark Red
    else if (ratio > array.get(ar, 1))
        #E3242B // Mid Red
    else if (ratio > array.get(ar, 2))
        #E6910E // Orange
    else if (ratio > array.get(ar, 3))
        #63C5DA // Blue
    else if (ratio > array.get(ar, 4))
        #C7EA46 // Light Green
    else
        #39FF14 // Dark Green

getSMARatioNormalized(length) =>
    sma1 = sma(close, length)
    sma2 = sma(close, length)
    dsma1 = security(syminfo.tickerid, "D", sma1)
    dsma2 = security(syminfo.tickerid, "W", sma2)
    SMARatio = dsma1 / dsma2
    SMARatioMaxVal = 4
    SMARatioNormalized = SMARatio / SMARatioMaxVal
    SMARatioNormalized

f_round( _val, _decimals) => 
    // Rounds _val to _decimals places.
    _p = pow(10,_decimals)
    round(abs(_val)*_p)/_p*sign(_val)
    
//
// SMA Rationalized
//
SMAR_21 = getSMARatioNormalized(21)
SMAR_50 = getSMARatioNormalized(50)
SMAR_100 = getSMARatioNormalized(100)
SMAR_Average = (SMAR_21 + SMAR_50 + SMAR_100) / 3

//
//
//
ratio_Average = array.new_float()
array.push(ratio_Average, 0.6)
array.push(ratio_Average, 0.56)
array.push(ratio_Average, 0.5)
array.push(ratio_Average, 0.3)
array.push(ratio_Average, 0.2)

ratio_21 = array.new_float()
array.push(ratio_21, 0.55)
array.push(ratio_21, 0.45)
array.push(ratio_21, 0.4)
array.push(ratio_21, 0.25)
array.push(ratio_21, 0.15)

ratio_50 = array.new_float()
array.push(ratio_50, 0.62)
array.push(ratio_50, 0.56)
array.push(ratio_50, 0.52)
array.push(ratio_50, 0.25)
array.push(ratio_50, 0.15)

ratio_100 = array.new_float()
array.push(ratio_100, 0.85)
array.push(ratio_100, 0.56)
array.push(ratio_100, 0.52)
array.push(ratio_100, 0.25)
array.push(ratio_100, 0.15)

//
// Bands color
//
SMAR_21_color = getColor(SMAR_21, ratio_21)
SMAR_50_color = getColor(SMAR_50, ratio_50)
SMAR_100_color = getColor(SMAR_100, ratio_100)
SMAR_Average_color = getColor(SMAR_Average, ratio_Average)

labelXLoc = time_close + (( time_close - time_close[1] ) * 6 ) // Set Label offset

//
// SMA 21 Rationalized Band
//
SMAR_21_top = plot(20, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
SMAR_21_bottom = plot(0, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
fill(SMAR_21_top, SMAR_21_bottom, color=color.new(SMAR_21_color, 0))
SMAR_21_label = label.new (labelXLoc, 14, '21 days Moving Average' , xloc.bar_time, yloc.price, color.red, label.style_label_left, color.white, size=size.small )
label.delete ( SMAR_21_label[1] )

//
// SMA 50 Rationalized Band
//
SMAR_50_top = plot(45, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
SMAR_50_bottom = plot(25, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
fill(SMAR_50_top, SMAR_50_bottom, color=color.new(SMAR_50_color, 0))
SMAR_50_label = label.new (labelXLoc, 35, '50 days Moving Average' , xloc.bar_time, yloc.price, color.orange, label.style_label_left, color.white, size=size.small )
label.delete ( SMAR_50_label[1] )

//
// SMA 100 Rationalized Band
//
SMAR_100_top = plot(70, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
SMAR_100_bottom = plot(50, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
fill(SMAR_100_top, SMAR_100_bottom, color=color.new(SMAR_100_color, 0))
SMAR_100_label = label.new (labelXLoc, 55, '100 days Moving Average' , xloc.bar_time, yloc.price, color.green, label.style_label_left, color.white, size=size.small )
label.delete ( SMAR_100_label[1] )

//
// SMA Average Rationalized Band
//
SMAR_Average_top = plot(95, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
SMAR_Average_bottom = plot(75, style=plot.style_line, linewidth=1, color=color.new(color.white, 100))
fill(SMAR_Average_top, SMAR_Average_bottom, color=color.new(SMAR_Average_color, 0))
SMAR_Average_label = label.new (labelXLoc, 85, 'Average / High reliability' , xloc.bar_time, yloc.price, color.black, label.style_label_left, color.white, size=size.small )
label.delete ( SMAR_Average_label[1] )


plot(series=f_round(SMAR_21, 2), title="21risk", color=color.new(color.white, 100))
plot(series=f_round(SMAR_50, 2), title="50risk", color=color.new(color.white, 100))
plot(series=f_round(SMAR_100, 2), title="100risk", color=color.new(color.white, 100))
plot(series=f_round(SMAR_Average, 2), title="Averagerisk", color=color.new(color.white, 100))

alertcondition(true, title='Daily - Bitcoin Risk Meter', message='B < 0.2 < x < 0.6 < S\n\nAverage SMA risk : {{plot(\"Averagerisk\")}}\n\n21 SMA risk : {{plot(\"21risk\")}}\n\n50 SMA risk : {{plot(\"50risk\")}}\n\n100 SMA risk : {{plot(\"100risk\")}}')